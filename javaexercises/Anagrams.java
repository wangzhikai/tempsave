/**
 * @author Zhikai Wang/www.heteroclinic.net
 * Given third party license acknowledged and this header kept or quoted, you can utilize this program at will.
*/

public class Anagrams {
	static final String input = "Rabbit";
	static  int [] data = null;
	static void parsePermutation (int n, int m, int [] rindx,int []results) {
		int [] data = new int[n];

	    int i =0,j=0;
	    for (i=0; i<n;i++)
	        data[i] = i+1;
	    for (i=0; i<m;i++) {
	        results[i] = data[rindx[i]-1];
	        for (j=rindx[i]-1; j<n-1; j++) {
	            data[j] = data[j+1];
	        }
	    }
	    //  delete [] data; data = NULL;
	}
	static  void createIndices(int n, int m, int k, int [] rindx) {
		int i = 0,dsi =1,j=0;
		for (i=0; i<m; i++) {
			dsi = (k) %(n-i);
			if (dsi==0) 
				dsi = n-i;
			rindx[i] = dsi;
			if (k<= n-i) {
				for (j = i+1;j<m;j++)
					rindx[j] = 1;
				break;
			} 
			//k = (k-1) /(n-i+1);
			k = (k-1)/(n-i)+1;
		}
	}
       
       public static void permute (final String input)  {
    	   
    		int total = 1,m=input.length(),n=input.length();
    		int i = 0,j=0;
    		
    		total = 1;
    		for (i = 1; i<= m; i++) {
    			total *= (n-i+1); 
    		}
    		int [] results = new int[m];
    		int [] indxs = new int[m];
    		for (i =1; i<=total;i++) {
    			createIndices(n,m,i, indxs) ;
    			parsePermutation (n,m,indxs,results);
    			for(j=0; j<m;j++) {
    				//System.out.print(results[j]+",");
    				
    				System.out.print(Character.toString(input.charAt(results[j]-1)));
    				
    				//
    			}
    			System.out.println();
    		}
    		
       }

       public static void main(String[] args) {
           
           permute (input);
       }
}

////OUTPUT
//Rabbit
//aRbbit
//bRabit
//bRabit
//iRabbt
//tRabbi
//Rbabit
//abRbit
//baRbit
//baRbit
//iaRbbt
//taRbbi
//Rbabit
//abRbit
//bbRait
//bbRait
//ibRabt
//tbRabi
//Riabbt
//aiRbbt
//biRabt
//biRabt
//ibRabt
//tbRabi
//Rtabbi
//atRbbi
//btRabi
//btRabi
//itRabb
//tiRabb
//Rabbit
//aRbbit
//bRbait
//bRbait
//iRbabt
//tRbabi
//Rbbait
//abbRit
//babRit
//babRit
//iabRbt
//tabRbi
//Rbbait
//abbRit
//bbaRit
//bbaRit
//ibaRbt
//tbaRbi
//Ribabt
//aibRbt
//biaRbt
//biaRbt
//ibaRbt
//tbaRbi
//Rtbabi
//atbRbi
//btaRbi
//btaRbi
//itaRbb
//tiaRbb
//Raibbt
//aRibbt
//bRiabt
//bRiabt
//iRbabt
//tRbabi
//Rbiabt
//abiRbt
//baiRbt
//baiRbt
//iabRbt
//tabRbi
//Rbiabt
//abiRbt
//bbiRat
//bbiRat
//ibbRat
//tbbRai
//Ribabt
//aibRbt
//bibRat
//bibRat
//ibbRat
//tbbRai
//Rtbabi
//atbRbi
//btbRai
//btbRai
//itbRab
//tibRab
//Ratbbi
//aRtbbi
//bRtabi
//bRtabi
//iRtabb
//tRiabb
//Rbtabi
//abtRbi
//batRbi
//batRbi
//iatRbb
//taiRbb
//Rbtabi
//abtRbi
//bbtRai
//bbtRai
//ibtRab
//tbiRab
//Ritabb
//aitRbb
//bitRab
//bitRab
//ibtRab
//tbiRab
//Rtiabb
//atiRbb
//btiRab
//btiRab
//itbRab
//tibRab
//Rabibt
//aRbibt
//bRaibt
//bRaibt
//iRabbt
//tRabbi
//Rbaibt
//abRibt
//baRibt
//baRibt
//iaRbbt
//taRbbi
//Rbaibt
//abRibt
//bbRiat
//bbRiat
//ibRbat
//tbRbai
//Riabbt
//aiRbbt
//biRbat
//biRbat
//ibRbat
//tbRbai
//Rtabbi
//atRbbi
//btRbai
//btRbai
//itRbab
//tiRbab
//Rabibt
//aRbibt
//bRbiat
//bRbiat
//iRbbat
//tRbbai
//Rbbiat
//abbiRt
//babiRt
//babiRt
//iabbRt
//tabbRi
//Rbbiat
//abbiRt
//bbaiRt
//bbaiRt
//ibabRt
//tbabRi
//Ribbat
//aibbRt
//biabRt
//biabRt
//ibabRt
//tbabRi
//Rtbbai
//atbbRi
//btabRi
//btabRi
//itabRb
//tiabRb
//Raibbt
//aRibbt
//bRibat
//bRibat
//iRbbat
//tRbbai
//Rbibat
//abibRt
//baibRt
//baibRt
//iabbRt
//tabbRi
//Rbibat
//abibRt
//bbiaRt
//bbiaRt
//ibbaRt
//tbbaRi
//Ribbat
//aibbRt
//bibaRt
//bibaRt
//ibbaRt
//tbbaRi
//Rtbbai
//atbbRi
//btbaRi
//btbaRi
//itbaRb
//tibaRb
//Ratbbi
//aRtbbi
//bRtbai
//bRtbai
//iRtbab
//tRibab
//Rbtbai
//abtbRi
//batbRi
//batbRi
//iatbRb
//taibRb
//Rbtbai
//abtbRi
//bbtaRi
//bbtaRi
//ibtaRb
//tbiaRb
//Ritbab
//aitbRb
//bitaRb
//bitaRb
//ibtaRb
//tbiaRb
//Rtibab
//atibRb
//btiaRb
//btiaRb
//itbaRb
//tibaRb
//Rabtbi
//aRbtbi
//bRatbi
//bRatbi
//iRatbb
//tRaibb
//Rbatbi
//abRtbi
//baRtbi
//baRtbi
//iaRtbb
//taRibb
//Rbatbi
//abRtbi
//bbRtai
//bbRtai
//ibRtab
//tbRiab
//Riatbb
//aiRtbb
//biRtab
//biRtab
//ibRtab
//tbRiab
//Rtaibb
//atRibb
//btRiab
//btRiab
//itRbab
//tiRbab
//Rabtbi
//aRbtbi
//bRbtai
//bRbtai
//iRbtab
//tRbiab
//Rbbtai
//abbtRi
//babtRi
//babtRi
//iabtRb
//tabiRb
//Rbbtai
//abbtRi
//bbatRi
//bbatRi
//ibatRb
//tbaiRb
//Ribtab
//aibtRb
//biatRb
//biatRb
//ibatRb
//tbaiRb
//Rtbiab
//atbiRb
//btaiRb
//btaiRb
//itabRb
//tiabRb
//Raitbb
//aRitbb
//bRitab
//bRitab
//iRbtab
//tRbiab
//Rbitab
//abitRb
//baitRb
//baitRb
//iabtRb
//tabiRb
//Rbitab
//abitRb
//bbitRa
//bbitRa
//ibbtRa
//tbbiRa
//Ribtab
//aibtRb
//bibtRa
//bibtRa
//ibbtRa
//tbbiRa
//Rtbiab
//atbiRb
//btbiRa
//btbiRa
//itbbRa
//tibbRa
//Ratibb
//aRtibb
//bRtiab
//bRtiab
//iRtbab
//tRibab
//Rbtiab
//abtiRb
//batiRb
//batiRb
//iatbRb
//taibRb
//Rbtiab
//abtiRb
//bbtiRa
//bbtiRa
//ibtbRa
//tbibRa
//Ritbab
//aitbRb
//bitbRa
//bitbRa
//ibtbRa
//tbibRa
//Rtibab
//atibRb
//btibRa
//btibRa
//itbbRa
//tibbRa
//Rabbti
//aRbbti
//bRabti
//bRabti
//iRabtb
//tRabib
//Rbabti
//abRbti
//baRbti
//baRbti
//iaRbtb
//taRbib
//Rbabti
//abRbti
//bbRati
//bbRati
//ibRatb
//tbRaib
//Riabtb
//aiRbtb
//biRatb
//biRatb
//ibRatb
//tbRaib
//Rtabib
//atRbib
//btRaib
//btRaib
//itRabb
//tiRabb
//Rabbti
//aRbbti
//bRbati
//bRbati
//iRbatb
//tRbaib
//Rbbati
//abbRti
//babRti
//babRti
//iabRtb
//tabRib
//Rbbati
//abbRti
//bbaRti
//bbaRti
//ibaRtb
//tbaRib
//Ribatb
//aibRtb
//biaRtb
//biaRtb
//ibaRtb
//tbaRib
//Rtbaib
//atbRib
//btaRib
//btaRib
//itaRbb
//tiaRbb
//Raibtb
//aRibtb
//bRiatb
//bRiatb
//iRbatb
//tRbaib
//Rbiatb
//abiRtb
//baiRtb
//baiRtb
//iabRtb
//tabRib
//Rbiatb
//abiRtb
//bbiRta
//bbiRta
//ibbRta
//tbbRia
//Ribatb
//aibRtb
//bibRta
//bibRta
//ibbRta
//tbbRia
//Rtbaib
//atbRib
//btbRia
//btbRia
//itbRba
//tibRba
//Ratbib
//aRtbib
//bRtaib
//bRtaib
//iRtabb
//tRiabb
//Rbtaib
//abtRib
//batRib
//batRib
//iatRbb
//taiRbb
//Rbtaib
//abtRib
//bbtRia
//bbtRia
//ibtRba
//tbiRba
//Ritabb
//aitRbb
//bitRba
//bitRba
//ibtRba
//tbiRba
//Rtiabb
//atiRbb
//btiRba
//btiRba
//itbRba
//tibRba
//Rabitb
//aRbitb
//bRaitb
//bRaitb
//iRabtb
//tRabib
//Rbaitb
//abRitb
//baRitb
//baRitb
//iaRbtb
//taRbib
//Rbaitb
//abRitb
//bbRita
//bbRita
//ibRbta
//tbRbia
//Riabtb
//aiRbtb
//biRbta
//biRbta
//ibRbta
//tbRbia
//Rtabib
//atRbib
//btRbia
//btRbia
//itRbba
//tiRbba
//Rabitb
//aRbitb
//bRbita
//bRbita
//iRbbta
//tRbbia
//Rbbita
//abbitR
//babitR
//babitR
//iabbtR
//tabbiR
//Rbbita
//abbitR
//bbaitR
//bbaitR
//ibabtR
//tbabiR
//Ribbta
//aibbtR
//biabtR
//biabtR
//ibabtR
//tbabiR
//Rtbbia
//atbbiR
//btabiR
//btabiR
//itabbR
//tiabbR
//Raibtb
//aRibtb
//bRibta
//bRibta
//iRbbta
//tRbbia
//Rbibta
//abibtR
//baibtR
//baibtR
//iabbtR
//tabbiR
//Rbibta
//abibtR
//bbiatR
//bbiatR
//ibbatR
//tbbaiR
//Ribbta
//aibbtR
//bibatR
//bibatR
//ibbatR
//tbbaiR
//Rtbbia
//atbbiR
//btbaiR
//btbaiR
//itbabR
//tibabR
//Ratbib
//aRtbib
//bRtbia
//bRtbia
//iRtbba
//tRibba
//Rbtbia
//abtbiR
//batbiR
//batbiR
//iatbbR
//taibbR
//Rbtbia
//abtbiR
//bbtaiR
//bbtaiR
//ibtabR
//tbiabR
//Ritbba
//aitbbR
//bitabR
//bitabR
//ibtabR
//tbiabR
//Rtibba
//atibbR
//btiabR
//btiabR
//itbabR
//tibabR
//Rabtib
//aRbtib
//bRatib
//bRatib
//iRatbb
//tRaibb
//Rbatib
//abRtib
//baRtib
//baRtib
//iaRtbb
//taRibb
//Rbatib
//abRtib
//bbRtia
//bbRtia
//ibRtba
//tbRiba
//Riatbb
//aiRtbb
//biRtba
//biRtba
//ibRtba
//tbRiba
//Rtaibb
//atRibb
//btRiba
//btRiba
//itRbba
//tiRbba
//Rabtib
//aRbtib
//bRbtia
//bRbtia
//iRbtba
//tRbiba
//Rbbtia
//abbtiR
//babtiR
//babtiR
//iabtbR
//tabibR
//Rbbtia
//abbtiR
//bbatiR
//bbatiR
//ibatbR
//tbaibR
//Ribtba
//aibtbR
//biatbR
//biatbR
//ibatbR
//tbaibR
//Rtbiba
//atbibR
//btaibR
//btaibR
//itabbR
//tiabbR
//Raitbb
//aRitbb
//bRitba
//bRitba
//iRbtba
//tRbiba
//Rbitba
//abitbR
//baitbR
//baitbR
//iabtbR
//tabibR
//Rbitba
//abitbR
//bbitaR
//bbitaR
//ibbtaR
//tbbiaR
//Ribtba
//aibtbR
//bibtaR
//bibtaR
//ibbtaR
//tbbiaR
//Rtbiba
//atbibR
//btbiaR
//btbiaR
//itbbaR
//tibbaR
//Ratibb
//aRtibb
//bRtiba
//bRtiba
//iRtbba
//tRibba
//Rbtiba
//abtibR
//batibR
//batibR
//iatbbR
//taibbR
//Rbtiba
//abtibR
//bbtiaR
//bbtiaR
//ibtbaR
//tbibaR
//Ritbba
//aitbbR
//bitbaR
//bitbaR
//ibtbaR
//tbibaR
//Rtibba
//atibbR
//btibaR
//btibaR
//itbbaR
//tibbaR

