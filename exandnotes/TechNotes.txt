Ignoring versioned files
$ git update-index --assume-unchanged irise.properties 

=====
MAC fn  up/down, page up/down ctrl-fn  left right file beg file end
Mac terminal linux console: ctrl-a home ctrl-e end
VIM ctrl-cmd-a ctrl-cmd-e  gg G 
=====
   /**
     * TODO TASK
     * TODO TASK CURRENT Verify that CHTML or its view can be locked, valid case.
     * TODO TASK Verify copying of chapter also copies the Lock property of widgets, valid case.
     * TODO TASK Verify that the locked widget can be associated to the actions, valid case.
     * TODO TASK Verify that you can lock localRef, valid case. localRef TBD
     * TODO TASK Verify that you cannot lock blacklist items ( menu, tables....), invalid case.
     * TODO TASK Verify creating actions from locked widget, valid case. Actions TBD?
     * TODO TASK
     * TODO TASK
     ï»¿* TODO QUESTION At the service layer, do (x,y) change as per the new container?
     * TODO BUG TASK Verify that the locked widgets can be moved, valid case. To change (x,y) or to move to a different container.
     * TODO BUG TASK Verify that locking the container also locks its children, valid case. As per DOD-771.
     * TODO ISSUE see test function. TASK Verify that lock property can be undo/redo, valid case.
     * Undo redo definitions?
     */
=======
Ignore un-versioned files
git config --global core.excludesfile ~/.gitignore_global
vim ~/.gitignore_global
cat ~/.gitignore_global
/Users/zwang/Documents/irise/irise-service-test/irise.properties
.DS_Store
.DS_Store?

===================================

/**
 * TODO DONE Verify that locked widgets can be selected and deleted, valid case.
 * TODO DONE Put common, project, widget, chapter etc in a map: def synchronized getATool (String keyWord)
 * TODO DONE printChapterURLForRestClient (content,projectIdInTest,contentIdInTest,chapterNameInTest)
 * TODO DONE map key String case sensitive? Yes, "a" differs "A" as a key.
 * TODO DONE lock(), unlock()
 * def protected lockUnlockVerifyOneByOne (x,common,containerKey,widget,projectIdInTest,opVector)
 * def protected lockUnlockVerifyBatch (x,common,containerKey,widget,projectIdInTest, chapterIdInTest,opVector)
 * TODO DONE verifyNodeAttributeFromContentResp()
 * TODO DONE verifyNodeAttributeFromContentResp() //A set of of widgets
 * static def verifyAttributes(x, attributesVector,resp,expected)
 * TODO DONE Batch create whiteList widgets: static def createNBatchWhiteListWidgets (N,common,content, widget,tag,projectIdInTest, contentIdInTest, containerKey)
 * TODO DONE TASK Verify that the locked widgets can be cut/copy, valid case: cut/copied if locked still locked.
 * TODO DONE QUESTION // def itinerary = [] //class  println itinerary.getClass() java.util.ArrayList
 * TODO DONE QUESTION Returns false? if (visit[1].equals(chapterIdInTest))
 * println visit[1].getClass() //class org.codehaus.groovy.runtime.GStringImpl, it behaves differently from Java String class
 * TODO DONE QUESTION //?? batchWidgets[i] : new LinkedHashMap<String,?> box i to Integer or String, thus key 'i' not exist rather than retrieve element at position i
 * TODO DONE TASK Verify widgets can be dropped in locked container, valid case.
 * TODO DONE TASK Verify that lock property can be undo/redo, valid case.
 * TODO COMMIT POINT
 * TODO CONSIDERING Refactor getContentIdByChapterName, getChapterIdByChapterName
 * TODO CONSIDERING Test create CONDITIONAL_HTML
 * TODO QUESTION At the service layer, do (x,y) change as per the new container?
 * TODO BUG TASK Verify that the locked widgets can be moved, valid case. To change (x,y) or to move to a different container.
 * TODO BUG TASK Verify that locking the container also locks its children, valid case. As per DOD-771.
 * TODO ISSUE see test function. TASK Verify that lock property can be undo/redo, valid case.
 */
 


215  git remote set-url origin git@github.com:/iRise/irise-service-test
  218   git remote set-url origin git@github.com:wangzhikai/irise-service-test.git

======
Dev log of TestWidgetsLocking 20141014
    /**
     * TODO Done getLevelOneSubNotesIds(): static def getLevelOneSubNotesIds(content,projectId, chapterContentId,containerKey)
     * TODO Done test, groovy synchronized widgetsTypesCounters: synchronized def getAWidgetTypeCount (String type)
     * NOTE: if get method is synchronized, you don't have to use concurrent map or atomic stuff, but get() has to be synchronized
     * NOTE: this consideration is not necessary, since DC-wise widgets counter is not in the testing JVM instance. It tallers this program's cap, namely a distributed synchronized counter.
     * TODO Done QUESTION Java LinkedHashSet can replace a given node, without alternating the iteration sequence.
     * The answer is do not use set, use map instead.
     * TODO Done create standAloneWidgets[type_1, type_2]
     * [deprecated 20141014 BEG]
     * TODO Done Single widget create map:
     * 1. Required root attributes must be provided according to widgetCreateAttributes
     * NOTE: You cannot use addAll or putAll since you have to check required fields.
     * 2. Additional root attributes will be appended
     * 3. Required properties for create will use default
     * 4. Required properties can be changed than default
     * 5. Additional properties can be appended
     * 6. Handling conditional HTML
     * 7. Test create widgets
     * 8. Conditional_HTML create prop
     * 9. Use typesNamesPropsVector
     * [deprecated 20141014 END]
     * TODO Done Single widget create json : static def getSingleWidgetCreateJson(common,containerKey,rootCreateVector,propCreateVector)
     * TODO Done : static def getWidgetMap (common,containerKey,requiredRootAttributes, requiredProps, rootCreateVector,propCreateVector)
     * TODO Done Change set to map<IdAsString,?>
     * TODO Done Create batchWidgets[type_b_3, type_b_4]
     * TODO Done Refactor widgets creation : def getWidgetCreateElement (String tp,String tag,int n)
     * TODO Done Refactor assert resp
     * TODO Done Test java map addAll update all values, append keys new
     * TODO Done getWidgetMap
     * The case of widget creation
     * 1. This case is identified by function parameter widgetNodeInResp is an empty map  [:].
     * 2. Required root attributes are defined in requiredRootAttributes. All values must be provided by map newRootValues, or assert failure.
     * 3. After required root attributes are filled in, additional root attributes can be appended from newRootValues. AddAll should suffice.
     * 4. Required properties will be created from default, passed by parameter requiredProps
     * 5. Required properties will be updated by addAll of newPropValues map
     * The case of widget update
     * 1. This case identified by function parameter widgetNodeInResp is not an empty map.
     * 2.  Required root attributes are defined in requiredRootAttributes.
     * For each key, first try to get it from widgetNodeInResp. If found, the given value can be changed by newRootValues.
     * If not found, try to get it from newRootValues. If either fails, assert failure.
     * 3. After required root attributes are filled in, additional root attributes can be appended from newRootValues. AddAll should suffice.
     * 4. Required properties will be created from default, passed by parameter requiredProps
     * 5. Required properties will be update by values from widgetNodeInResp['properties']. Then addAll from newPropValues.
     * TODO Done Create stand-alone widget, update stand-alone widget
     * TODO Done Verify this method can also find a widgetNodeInResp : static def findAContainerInRespByUUID(node, UUID)
     * TODO Done Given a widget (a node in Resp), update from a new Resp, catch all new stuff, remove deprecated: just replace.
     * TODO Done Single widget update map
     * TODO Done Lock/unlock standAloneWidgets[type_1, type_2], two transactions
     * TODO Done Lock/unlock batchWidgets[type_b_1, type_b_2], one transaction
     * TODO Done Update widget(s) in batch
     * getBatchWidgetsUpdateMap(common,widgetsMap,containerKey,widgetRootUpdateVector,widgetPropUpdateVector)
     * getBatchWidgetsUpdateJson(common,widgetsMap,containerKey,widgetRootUpdateVector,widgetPropUpdateVector)
     * TODO Done Basic lock/unlock on white-list widgets, valid case.
     * TODO Done Verify that multiple widgets can be locked/unlocked at one go, valid case.
     * Lock/unlock batchWidgets[type_b_1, type_b_2], one transaction
     * TODO Done Lock lock assert unlock unlock assert
     * TODO Done
     * TODO Done
     * TODO COMMIT POINT, review and save to tech notes
     * TODO CONSIDERING Put common, project, widget, chapter etc in a map.
     * TODO CONSIDERING Refactor getContentIdByChapterName, getChapterIdByChapterName
     * TODO CONSIDERING Test create CONDITIONAL_HTML
     */
==== Basically, set is not preferably more advantageous than map. 
See LinkedHashSetReplaceTest

 git status | grep 'deleted' | sed 's/deleted://' | xargs -I{} git rm {}
====
#Intellij import suggestion
ALT ENTER


# regex not a character, regex not a literal
[^ \t]println
# regex uncommented println
^[ \t]*println

====HISTORY 20141010 ===
   70  cd ../dev-tools/scripts/
   76  git remote set-url origin git@github.com:irise/irise-service-test.git

# touch hyphen
touch '-'

  183  git add  src/test/groovy/com/irise/testng/featureTests/TestWidgetsGrouping.groovy

  201  cd ../dc
  202  git pull
  203  git remote show origin
  204  history | grep fetch
  217  git fetch mlui
  218  git rebase mlui/studio54_lite
  219  git log -5 --oneline
  220  mvn clean install -DskipTests -Dcobertura.skip
  221  cd ../dev-tools/
  222  git pull
  223  cd scripts/
  224  ls
  225  history | grep debug
  226  /Users/zwang/dcmlui/dev-tools/scripts/debug-dc.sh --war /Users/zwang/dcmlui/dc/muse-dc-web/target/muse-dc-web-9.0.5-SNAPSHOT.war --license-file /Users/zwang/dcmlui/dev-tools/scripts/irise.license --debug-port 5005 -Dcom.sun.management.jmxremote 1>>/Users/zwang/dcmlui/dclog.txt 2>> /Users/zwang/dcmlui/dclog.txt &
  227  tail -f /Users/zwang/dcmlui/dclog.txt 
  228  fg
  229  fg
  313  ls /Users/zwang/.m2/repository


# the mvn bug just remove the ~/.m2
  314  vim ~/.m2/settings.xml 
  315  /Users/zwang/.m2/repository

  324  git checkout --track -b studio54_lite mlui/studio54_lite
  325  git fetch mlui
  326   git remote add mlui git@github.com:/mlui/suite.git
  327  git fetch mlui
  328  git checkout --track -b studio54_lite mlui/studio54_lite
  329  mvn clean install
  330  cd ~/Documents/irise/irise-service-test


  343  git push
  344  ifconfig
  345  vim /etc/hosts
  346  sudo vim /etc/hosts
  347  ping irises-mbp-6
  348  ping irlaeng07.ircorp.com
  349  ifconfig
  350  ping irlaeng07


  355  sudo vim /etc/hosts
  356  ping ie11three

  392  mvn clean install -DskipTests -Dcobertura.skip 
